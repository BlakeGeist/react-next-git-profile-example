{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport moment from 'moment';\nimport ExampleList from '../features/profiles/ExampleList';\nimport Form from '../features/Form';\n\nvar FormContainer = function FormContainer(_ref, props) {\n  var userName = _ref.userName,\n      failedToFind = _ref.failedToFind,\n      dispatch = _ref.dispatch;\n\n  var handleSubmit =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(name, event) {\n      var apiCall, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              apiCall = \"https://api.github.com/users/\".concat(name);\n\n              if (event) {\n                event.preventDefault();\n              }\n\n              _context.next = 4;\n              return axios.get(apiCall).then(function (resp) {\n                data = resp.data;\n              })[\"catch\"](function (error) {});\n\n            case 4:\n              if (data) {\n                data.addedAt = moment().toDate();\n                dispatch({\n                  type: 'ADD_PROFILE',\n                  profileData: data\n                });\n              } else {\n                dispatch({\n                  type: 'SET_ITEM',\n                  name: 'failedToFind',\n                  payload: true\n                });\n                setTimeout(function () {\n                  dispatch({\n                    type: 'SET_ITEM',\n                    name: 'failedToFind',\n                    payload: false\n                  });\n                }, 3000);\n              }\n\n              dispatch({\n                type: 'SET_ITEM',\n                name: 'userName',\n                payload: ''\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(Form, {\n    handleSubmit: handleSubmit,\n    dispatch: dispatch\n  }), __jsx(ExampleList, {\n    clickAction:\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(name, event) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return dispatch({\n                  type: 'SET_ITEM',\n                  name: 'userName',\n                  payload: name\n                });\n\n              case 2:\n                handleSubmit(name);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x3, _x4) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  }));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    failedToFind: state.failedToFind,\n    userName: state.userName\n  };\n};\n\nexport default connect(mapStateToProps)(FormContainer);","map":null,"metadata":{},"sourceType":"module"}