{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport ProfilesSearch from './ProfilesSearch';\nimport ProfileSort from './ProfileSort';\n\nvar ProfilesControls = function ProfilesControls(_ref) {\n  var profiles = _ref.profiles,\n      update = _ref.update,\n      setProfiles = _ref.setProfiles,\n      dispatch = _ref.dispatch,\n      rawProfiles = _ref.rawProfiles,\n      hasSearched = _ref.hasSearched;\n\n  var handleSort = function handleSort(e) {\n    var sortedProfiles = profiles.sort(function (a, b) {\n      return a[e.target.value] > b[e.target.value] ? 1 : -1;\n    });\n    var updatedProfiles = update(profiles, {\n      $set: sortedProfiles.slice(0)\n    });\n    setProfiles(updatedProfiles);\n    dispatch({\n      type: 'SET_ITEM',\n      name: 'profiles',\n      payload: updatedProfiles\n    });\n  };\n\n  var handleSearch = function handleSearch(e) {\n    dispatch({\n      type: 'SET_ITEM',\n      name: 'hasSearched',\n      payload: true\n    });\n\n    if (!e.target.value) {\n      var _updatedProfiles = update(profiles, {\n        $set: rawProfiles\n      });\n\n      setProfiles(_updatedProfiles);\n      dispatch({\n        type: 'SET_ITEM',\n        name: 'profiles',\n        payload: _updatedProfiles\n      });\n      dispatch({\n        type: 'SET_ITEM',\n        name: 'hasSearched',\n        payload: false\n      });\n      return;\n    }\n\n    var filteredArray = rawProfiles.filter(function (itm) {\n      return itm.name.toLowerCase().indexOf(e.target.value.toLowerCase()) > -1;\n    });\n    var updatedProfiles = update(profiles, {\n      $set: filteredArray\n    });\n    setProfiles(updatedProfiles);\n    dispatch({\n      type: 'SET_ITEM',\n      name: 'profiles',\n      payload: updatedProfiles\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: profiles.length > 1 || hasSearched ? 'profiles-controls' : ''\n  }, profiles.length > 1 || hasSearched ? __jsx(ProfilesSearch, {\n    handleSearch: handleSearch\n  }) : '', profiles.length > 1 ? __jsx(ProfileSort, {\n    handleSort: handleSort\n  }) : '');\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    profiles: state.profiles,\n    hasSearched: state.hasSearched,\n    rawProfiles: state.rawProfiles\n  };\n};\n\nexport default connect(mapStateToProps)(ProfilesControls);","map":null,"metadata":{},"sourceType":"module"}